@model ICollection<Emprestimo>
@{
    ViewData["Title"] = "Listagem de Empréstimos";
    int FiltroPPagina = Int32.Parse(ViewData["emprestimoPPagina"].ToString());
    int PaginaAtual = Int32.Parse(ViewData["paginaAtual"].ToString());
    int NumEmprestimoPP = (Model.Count < FiltroPPagina ? Model.Count : FiltroPPagina);
    int NumTotalPagina = 1;
        if (NumEmprestimoPP > 0)
        {
            NumTotalPagina = Model.Count / NumEmprestimoPP + (Model.Count % NumEmprestimoPP == 0 ? 0 : 1);
        }
}

<div class="row">
    <div class="col-md-12">
        <form class="form-inline" method="POST">
            <div class="form-group mb-2">
                <select name="TipoFiltro" class="form-control">
                    <option value="Usuario">Usuário</option>
                    <option value="Livro">Livro</option>
                </select>
            </div>
            <div class="form-group mb-2 mx-sm-3">
                <input type="text" placeholder="Filtro" name="Filtro" class="form-control" />
            </div>
            <button type="submit" class="btn btn-primary mb-2 mr-5">Pesquisar</button>
            <select name="itensPPagina" id="itensPPagina" class="form-control">
                <option value="5">5 Emperstimos</option>
                <option value="10">10 Emperstimos</option>
                <option value="20">20 Emperstimos</option>
                <option value="50">50 Emperstimos</option>
                <option value="@Model.Count">Todos</option>
            </select>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        @if (Model.Count != 0)
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Usuario</th>
                        <th>Data Empréstimo</th>
                        <th>Data Devolução</th>
                        <th>Livro</th>
                        <th>Autor</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var emprestimo in Model.OrderByDescending(e => e.DataDevolucao).Skip((PaginaAtual - 1) * NumEmprestimoPP).Take(NumEmprestimoPP))
                    {
                        <tr class="@((emprestimo.DataDevolucao < DateTime.Today) ? "table-danger" : "")">
                            <td>@emprestimo.Id</td>
                            <td>@emprestimo.NomeUsuario</td>
                            <td>@emprestimo.DataEmprestimo.ToString("dd/MM/yyyy")</td>
                            <td>@emprestimo.DataDevolucao.ToString("dd/MM/yyyy")</td>
                            <td>@emprestimo.Livro.Titulo</td>
                            <td>@emprestimo.Livro.Autor</td>
                            <td><a href="/Emprestimo/Edicao/@emprestimo.Id">Editar</a></td>
                        </tr>
                    }
                </tbody>
            </table>

        }
        else
        {
            <h2>Nenhum Registro Encontrado!</h2>
        }

    </div>
</div>

<div id="SeletorPaginas" class="text-center mt-3">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= NumTotalPagina; i++)
            {
                <li class="page-item @(i == PaginaAtual ? "active" : "")">
                    @if (i == PaginaAtual)
                    {
                        <span class="page-link">@i <span class="sr-only">(current)</span></span>
                    }
                    else
                    {
                        <a class="page-link" href="/Emprestimo/Listagem?PaginaAtual=@i">@i</a>
                    }
                </li>
            }
        </ul>
    </nav>
</div>

